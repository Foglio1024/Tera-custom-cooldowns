<grp:GroupMemberBase x:Class="TCC.Controls.Group.PartyMember"
                     xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                     xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                     xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                     xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                     xmlns:pc="clr-namespace:TCC.Data.Pc"
                     xmlns:grp="clr-namespace:TCC.Controls.Group"
                     mc:Ignorable="d"
                     d:DataContext="{d:DesignInstance pc:User}">
    <grp:GroupMemberBase.Resources>
        <Style TargetType="FrameworkElement" x:Key="OnlineBoundVisibility">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Online}" Value="False">
                    <DataTrigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation From="1" To="0"
                                                 Duration="0:0:0.2"
                                                 Storyboard.TargetProperty="Opacity" />
                            </Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.EnterActions>
                    <DataTrigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation From="0" To="1"
                                                 Duration="0:0:0.2"
                                                 Storyboard.TargetProperty="Opacity" />
                            </Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.ExitActions>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="ItemsControl" x:Key="AbnormalitiesItemsControlStyle">
            <Setter Property="ItemTemplateSelector"
                    Value="{Binding CurrentAbnormalityTemplateSelector, 
                                                                    RelativeSource={RelativeSource AncestorType=grp:GroupMemberBase}}" />
            <Setter Property="ClipToBounds" Value="False" />
            <Setter Property="ItemContainerStyle">
                <Setter.Value>
                    <Style>
                        <!-- ReSharper disable once Xaml.RedundantPropertyTypeQualifier -->
                        <Setter Property="ContentControl.Margin" Value="-6 0 0 -6" />
                    </Style>
                </Setter.Value>
            </Setter>
            <Setter Property="ItemsPanel">
                <Setter.Value>
                    <ItemsPanelTemplate>
                        <WrapPanel Orientation="Horizontal"
                                   HorizontalAlignment="Left"
                                   Height="Auto"
                                   Width="Auto" />
                    </ItemsPanelTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </grp:GroupMemberBase.Resources>
    <Grid Height="Auto" Margin="4 0 4 10" Width="175" Name="RootGrid">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="Auto" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <!--Abnormalities grids-->
        <Grid Name="BuffGrid" Grid.Row="1" Grid.ColumnSpan="2">
            <ItemsControl Name="Buffs"
                          ItemsSource="{Binding BuffsSource, RelativeSource={RelativeSource AncestorType=grp:GroupMemberBase}}"
                          Style="{StaticResource AbnormalitiesItemsControlStyle}">
                <ItemsControl.RenderTransform>
                    <TranslateTransform X="31" Y="-4" />
                </ItemsControl.RenderTransform>
            </ItemsControl>
        </Grid>
        <Grid Name="DebuffGrid" Grid.Row="2" Grid.ColumnSpan="2">
            <ItemsControl Name="Debuffs"
                          ItemsSource="{Binding DebuffsSource, RelativeSource={RelativeSource AncestorType=grp:GroupMemberBase}}"
                          Style="{StaticResource AbnormalitiesItemsControlStyle}">
                <ItemsControl.RenderTransform>
                    <TranslateTransform X="31" />
                </ItemsControl.RenderTransform>
            </ItemsControl>
        </Grid>

        <!--Info grid-->
        <Grid Grid.Column="1"
              VerticalAlignment="Stretch"
              HorizontalAlignment="Stretch"
              UseLayoutRounding="True">
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <!--Name-->
            <TextBlock TextTrimming="CharacterEllipsis" Foreground="#cfff" Cursor="Hand"
                       ToolTipService.ShowDuration="50000"
                       PreviewMouseLeftButtonDown="ShowUserMenu"
                       VerticalAlignment="Center" HorizontalAlignment="Left" Margin="3,-2,0,4" FontSize="12"
                       Grid.Row="0" Grid.Column="0">
                <Run Text="{Binding Level}" FontSize="12" Foreground="#6fff" />
                <Run Text="{Binding Name, Mode=OneWay}" FontSize="14" />
                <TextBlock.ToolTip>
                    <ToolTip Background="Transparent" BorderBrush="Transparent" Opened="ToolTip_OnOpened"
                             Closed="ToolTip_OnClosed">
                        <Grid>
                            <Border Background="#556" CornerRadius="5" Padding="10,5,15,5"
                                    Effect="{StaticResource FadedDropShadow}">
                                <StackPanel Orientation="Vertical">
                                    <TextBlock Foreground="White" Text="{Binding Name, Mode=OneWay}"
                                               FontWeight="DemiBold" FontSize="14" Margin="0,0,0,0" />
                                    <StackPanel Orientation="Horizontal"
                                                Visibility="{Binding Weapon, Converter={StaticResource NullToVisibleCollapsed}}"
                                                Margin="0,5,0,0">
                                        <Path Data="{Binding Weapon.Piece, Converter={StaticResource PieceToPath}}"
                                              Fill="#afff" Stretch="Uniform" Height="12" Width="12" />
                                        <TextBlock Foreground="White" FontSize="12"
                                                   Text="{Binding Weapon.Name, Mode=OneWay}" VerticalAlignment="Center"
                                                   Margin="5,0,0,0" />
                                    </StackPanel>
                                    <StackPanel Orientation="Horizontal"
                                                Visibility="{Binding Armor, Converter={StaticResource NullToVisibleCollapsed}}"
                                                Margin="0,0,0,0">
                                        <Path Data="{Binding Armor.Piece, Converter={StaticResource PieceToPath}}"
                                              Fill="#afff" Stretch="Uniform" Height="12" Width="12" />
                                        <TextBlock Foreground="White" FontSize="12"
                                                   Text="{Binding Armor.Name, Mode=OneWay}" VerticalAlignment="Center"
                                                   Margin="5,0,0,0" />
                                    </StackPanel>
                                    <StackPanel Orientation="Horizontal"
                                                Visibility="{Binding Gloves, Converter={StaticResource NullToVisibleCollapsed}}"
                                                Margin="0,0,0,0">
                                        <Path Data="{Binding Gloves.Piece, Converter={StaticResource PieceToPath}}"
                                              Fill="#afff" Stretch="Uniform" Height="12" Width="12" />
                                        <TextBlock Foreground="White" FontSize="12"
                                                   Text="{Binding Gloves.Name, Mode=OneWay}" VerticalAlignment="Center"
                                                   Margin="5,0,0,0" />
                                    </StackPanel>
                                    <StackPanel Orientation="Horizontal"
                                                Visibility="{Binding Boots, Converter={StaticResource NullToVisibleCollapsed}}"
                                                Margin="0,0,0,0">
                                        <Path Data="{Binding Boots.Piece, Converter={StaticResource PieceToPath}}"
                                              Fill="#afff" Stretch="Uniform" Height="12" Width="12" />
                                        <TextBlock Foreground="White" FontSize="12"
                                                   Text="{Binding Boots.Name, Mode=OneWay}" VerticalAlignment="Center"
                                                   Margin="5,0,0,0" />
                                    </StackPanel>

                                    <StackPanel Orientation="Horizontal" Margin="0,5,0,0"
                                                Visibility="{Binding Online, Converter={StaticResource BoolToVisibleCollapsed}}">
                                        <!--map marker icon-->
                                        <Path Data="{StaticResource SvgMapMarker}" Fill="#6fff" Stretch="Uniform"
                                              Height="12" Margin="3" />
                                        <TextBlock Foreground="#7fff" VerticalAlignment="Center" Margin="3,0,0,0">
                                            <Run Text="{Binding Location, Mode=OneWay}" />
                                        </TextBlock>
                                    </StackPanel>
                                </StackPanel>
                            </Border>
                            <Border Width="5" HorizontalAlignment="Right" Height="Auto" VerticalAlignment="Stretch"
                                    CornerRadius="0,3,3,0"
                                    Background="{Binding UserClass, Converter={StaticResource ClassToFill}}" />
                        </Grid>
                    </ToolTip>
                </TextBlock.ToolTip>
                <TextBlock.Effect>
                    <DropShadowEffect ShadowDepth="0" BlurRadius="5" />
                </TextBlock.Effect>
            </TextBlock>
            <Border Grid.Row="1" Grid.ColumnSpan="2"
                    RenderTransform="{StaticResource Skew45}"
                    RenderTransformOrigin=".5 .5" Height="Auto"
                    Background="#5000" BorderThickness="2 1"
                    BorderBrush="{StaticResource RevampBorderBrush}"
                    Margin="-2 -10 3 7" Padding="1"
                    Visibility="{Binding Online, Converter={StaticResource BooleanToVisibilityConverter}}">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition />
                        <RowDefinition />
                    </Grid.RowDefinitions>
                    <Rectangle x:Name="HpBar"
                               Height="7" Width="Auto"
                               HorizontalAlignment="Stretch"
                               Style="{StaticResource OnlineBoundVisibility}"
                               Visibility="{Binding ShowHp, RelativeSource={RelativeSource AncestorType=grp:GroupMemberBase}, 
                                                            Converter={StaticResource BoolToVisibleCollapsed}}">
                        <Rectangle.Fill>
                            <LinearGradientBrush EndPoint="1 0">
                                <GradientStop Offset=".2"
                                              Color="{Binding IsDebuffed, Converter={StaticResource DebuffStatusToHpColor}}" />
                                <GradientStop Offset="1"
                                              Color="{Binding IsDebuffed, Converter={StaticResource DebuffStatusToHpColor2}}" />
                            </LinearGradientBrush>
                        </Rectangle.Fill>
                        <Rectangle.RenderTransform>
                            <TransformGroup>
                                <ScaleTransform ScaleX="{Binding HpFactor}" />
                            </TransformGroup>
                        </Rectangle.RenderTransform>
                    </Rectangle>
                    <Rectangle x:Name="MpBar"
                               Grid.Row="1" Height="3"
                               Margin="0 1 0 0" Width="Auto" HorizontalAlignment="Stretch"
                               Style="{StaticResource OnlineBoundVisibility}"
                               Visibility="{Binding ShowMp, RelativeSource={RelativeSource AncestorType=grp:GroupMemberBase}, 
                                                            Converter={StaticResource BoolToVisibleCollapsed}}">
                        <Rectangle.Fill>
                            <LinearGradientBrush EndPoint="1 0">
                                <GradientStop Color="{StaticResource MpColorLight}" Offset=".9" />
                                <GradientStop Color="{StaticResource MpColor}" Offset="0" />
                            </LinearGradientBrush>
                        </Rectangle.Fill>
                        <Rectangle.RenderTransform>
                            <TransformGroup>
                                <ScaleTransform ScaleX="{Binding MpFactor}" />
                            </TransformGroup>
                        </Rectangle.RenderTransform>
                    </Rectangle>
                    <Grid
                        RenderTransform="{StaticResource Skew45Inv}"
                        RenderTransformOrigin=".5 .5"
                        Margin="0 -20"
                        Visibility="{Binding ShowHp, RelativeSource={RelativeSource AncestorType=grp:GroupMemberBase}}"
                        >
                        <Grid.Resources>
                            <Style TargetType="Rectangle">
                                <Setter Property="Fill" Value="#b000" />
                                <Setter Property="Width" Value="45" />
                                <Setter Property="Height" Value="8" />
                                <Setter Property="VerticalAlignment" Value="Center" />
                                <Setter Property="Effect">
                                    <Setter.Value>
                                        <BlurEffect Radius="10" RenderingBias="Performance" KernelType="Gaussian" />
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ShowHpPercentage, RelativeSource={RelativeSource AncestorType=grp:GroupMemberBase}}" Value="True">
                                        <Setter Property="Width" Value="35" />
                                    </DataTrigger>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding ShowHpPercentage, RelativeSource={RelativeSource AncestorType=grp:GroupMemberBase}}"></Condition>
                                        </MultiDataTrigger.Conditions>
                                    </MultiDataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Grid.Resources>

                        <Rectangle
                            Visibility="{Binding ShowHpPercentage, RelativeSource={RelativeSource AncestorType=grp:GroupMemberBase}, Converter={StaticResource BoolToVisibleCollapsed}}"
                            Grid.RowSpan="1" />

                        <TextBlock Foreground="#9fff"
                                   Grid.RowSpan="1"
                                   Visibility="{Binding ShowHpPercentage, RelativeSource={RelativeSource AncestorType=grp:GroupMemberBase}, 
                                                            Converter={StaticResource BoolToVisibleCollapsed}}"
                                   VerticalAlignment="Center"
                                   HorizontalAlignment="Center"

                                   FontSize="13"
                                   FontFamily="{StaticResource NotoSansMed}"
                                   Text="{Binding HpFactor, Mode=OneWay,StringFormat=0.#%}" />
                        <TextBlock Foreground="#afff"
                                   Grid.RowSpan="1"
                                   Visibility="{Binding ShowHpAmount, RelativeSource={RelativeSource AncestorType=grp:GroupMemberBase}, 
                                                            Converter={StaticResource BoolToVisibleCollapsed}}"
                                   FontWeight="DemiBold"
                                   VerticalAlignment="Center"
                                   HorizontalAlignment="Center"
                                   FontSize="13"
                                   Text="{Binding CurrentHp, Mode=OneWay}" />
                    </Grid>
                </Grid>
            </Border>
        </Grid>

        <!--Class/Laurel icon-->
        <Grid Margin="0" Width="44" Height="44" UseLayoutRounding="False">
            <Border RenderTransform="{StaticResource Rotate45}"
                    RenderTransformOrigin=".5 .5"
                    Background="{StaticResource RevampBackgroundBrush}"
                    BorderThickness="2"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Stretch"
                    BorderBrush="{StaticResource RevampBorderBrush}"
                    Margin="5" />
            <!--Aggro indicator -->
            <Grid x:Name="AggroBorderGrid" RenderTransformOrigin=".5 .5">
                <Border Name="AggroBorder"
                        Visibility="{Binding HasAggro, Converter={StaticResource BoolToVisibleCollapsed}}"
                        Background="#40ffa500"
                        BorderBrush="Orange"
                        BorderThickness="3"
                        Margin="4"
                        VerticalAlignment="Stretch"
                        HorizontalAlignment="Stretch"
                        d:IsHidden="True"
                        RenderTransform="{StaticResource Rotate45}"

                        RenderTransformOrigin=".5 .5">
                    <Border.Effect>
                        <DropShadowEffect Color="Orange" ShadowDepth="0" BlurRadius="10" RenderingBias="Performance" />
                    </Border.Effect>
                </Border>
                <Grid.Style>
                    <Style>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding HasAggro}" Value="True">
                                <DataTrigger.EnterActions>
                                    <BeginStoryboard x:Name="StartPulsing" Storyboard="{StaticResource Pulse}" />
                                </DataTrigger.EnterActions>
                                <DataTrigger.ExitActions>
                                    <StopStoryboard BeginStoryboardName="StartPulsing" />
                                </DataTrigger.ExitActions>
                            </DataTrigger>

                        </Style.Triggers>
                    </Style>
                </Grid.Style>

                <Grid.RenderTransform>
                    <ScaleTransform />
                </Grid.RenderTransform>
            </Grid>
            <!--Death indicator -->
            <Grid x:Name="DeathBorderGrid" RenderTransformOrigin=".5 .5">
                <Border x:Name="DeathBorder"
                        Visibility="{Binding Alive, Converter={StaticResource BoolToVisibleCollapsed}, ConverterParameter=invert}"
                        Background="#600"
                        BorderBrush="Red"
                        BorderThickness="3"
                        Margin="4"
                        RenderTransform="{StaticResource Rotate45}"
                        VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
                        d:IsHidden="True" RenderTransformOrigin=".5 .5">

                    <Border.Effect>
                        <DropShadowEffect Color="Red" ShadowDepth="0" BlurRadius="10" RenderingBias="Performance" />
                    </Border.Effect>
                </Border>
                <Grid.RenderTransform>
                    <ScaleTransform ScaleX="1" ScaleY="1" />
                </Grid.RenderTransform>
                <Grid.Style>
                    <Style>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Alive}" Value="False">
                                <DataTrigger.EnterActions>
                                    <BeginStoryboard x:Name="StartPulsing" Storyboard="{StaticResource Pulse}" />

                                </DataTrigger.EnterActions>
                                <DataTrigger.ExitActions>
                                    <StopStoryboard BeginStoryboardName="StartPulsing" />
                                </DataTrigger.ExitActions>
                            </DataTrigger>

                        </Style.Triggers>
                    </Style>
                </Grid.Style>

            </Grid>

            <Image x:Name="LaurelImage" Opacity="1"
                   Margin="-7"
                   RenderOptions.BitmapScalingMode="Linear"
                   UseLayoutRounding="True"
                   HorizontalAlignment="Center"
                   VerticalAlignment="Stretch"
                   Stretch="Uniform"
                   Source="{Binding Laurel, Converter={StaticResource LaurelToImage}, ConverterParameter=kr_half}"
                   Visibility="{Binding ShowLaurel, RelativeSource={RelativeSource AncestorType=grp:GroupMemberBase},
                                                    Converter={StaticResource BoolToVisibleCollapsed}}">
                <Image.RenderTransform>
                    <TranslateTransform Y="1" X="-.6" />
                </Image.RenderTransform>
            </Image>
            <Grid Width="13" Height="13"
                  HorizontalAlignment="Right" VerticalAlignment="Center"
                  Grid.Column="0" ToolTip="Awakened"
                  Visibility="{Binding ShowAwaken, RelativeSource={RelativeSource AncestorType=grp:GroupMemberBase},
                                                   Converter={StaticResource BoolToVisibleCollapsed}}">
                <Border Background="Transparent"
                        BorderBrush="Transparent"
                        Visibility="{Binding Awakened, Converter={StaticResource BoolToVisibleCollapsed}}"
                        RenderTransformOrigin=".5 .5"
                        x:Name="AwakenBorder">
                    <Border.RenderTransform>
                        <RotateTransform Angle="45" />
                    </Border.RenderTransform>
                </Border>
                <Path Stroke="Transparent" RenderOptions.BitmapScalingMode="Fant" Margin="3 0 0 0" Data="m0,1 1,-1 1,1"
                      StrokeThickness="3" Fill="Orange"
                      Visibility="{Binding Awakened, Converter={StaticResource BoolToVisibleCollapsed}}"
                      x:Name="AwakenIcon"
                      RenderTransformOrigin=".5 .5" Width="12">
                    <Path.RenderTransform>
                        <RotateTransform Angle="90" />
                    </Path.RenderTransform>
                    <Path.Effect>
                        <DropShadowEffect Color="Orange" ShadowDepth="0" BlurRadius="20" />
                    </Path.Effect>
                </Path>
                <Grid.RenderTransform>
                    <TransformGroup>
                        <TranslateTransform X="0" />
                    </TransformGroup>
                </Grid.RenderTransform>
            </Grid>
            <Path Fill="#eee" Opacity="1"
                  Margin="11 0"
                  HorizontalAlignment="Center" VerticalAlignment="Stretch" Stretch="Uniform"
                  Data="{Binding UserClass,Converter={StaticResource ClassToSvg}}"
                  Effect="{StaticResource ClassIconGlow}"
                  UseLayoutRounding="True"
                  RenderOptions.BitmapScalingMode="HighQuality">
                <Path.RenderTransform>
                    <TranslateTransform Y="0" />
                </Path.RenderTransform>
                <Path.Style>
                    <Style>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Online}" Value="False">
                                <DataTrigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation From="1" To=".3"
                                                             Duration="0:0:0.2"
                                                             Storyboard.TargetProperty="Opacity" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </DataTrigger.EnterActions>
                                <DataTrigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation From=".3" To="1"
                                                             Duration="0:0:0.2"
                                                             Storyboard.TargetProperty="Opacity" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </DataTrigger.ExitActions>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Path.Style>
            </Path>
        </Grid>
        <!--Leader icon-->
        <Grid Width="14" Height="14"
              Visibility="{Binding IsLeader, Converter={StaticResource BooleanToVisibilityConverter}}"
              HorizontalAlignment="Left" VerticalAlignment="Top"
              Grid.Column="0"
              Margin="0">
            <Border Background="Orange"
                    BorderBrush="{StaticResource RevampBorderBrush}"
                    BorderThickness="1"
                    RenderTransformOrigin=".5 .5">
                <Border.RenderTransform>
                    <RotateTransform Angle="45" />
                </Border.RenderTransform>
            </Border>
            <Rectangle Fill="{StaticResource RevampBackgroundBrush}" RenderOptions.BitmapScalingMode="Fant" Margin="2">
                <Rectangle.OpacityMask>
                    <ImageBrush ImageSource="/TCC;component/resources/images/crown.png" />
                </Rectangle.OpacityMask>
            </Rectangle>
            <Grid.RenderTransform>
                <TranslateTransform X="0" />
            </Grid.RenderTransform>
            <Grid.Effect>
                <DropShadowEffect ShadowDepth="2" Opacity=".7" />
            </Grid.Effect>
        </Grid>

        <!--Ready check grid-->
        <Grid VerticalAlignment="Top" HorizontalAlignment="Left" Grid.ColumnSpan="2"
              Opacity="{Binding Ready, Converter={StaticResource ReadyToOpacityConv}}">
            <Grid.Effect>
                <DropShadowEffect ShadowDepth="1" RenderingBias="Performance" BlurRadius="3" />
            </Grid.Effect>
            <Border Width="16" Height="16"
                    Background="{Binding Ready, Converter={StaticResource ReadyToColor}}"
                    RenderTransform="{StaticResource Rotate45}" RenderTransformOrigin=".5 .5" />
            <Rectangle Width="14" Height="14" Fill="Black" RenderOptions.BitmapScalingMode="Fant">
                <Rectangle.OpacityMask>
                    <ImageBrush ImageSource="{Binding Ready, Converter={StaticResource ReadyToIcon}}" />
                </Rectangle.OpacityMask>
            </Rectangle>
        </Grid>

        <!--Roll result grid-->
        <Grid Margin="0,-1" VerticalAlignment="Top" HorizontalAlignment="Right" Grid.ColumnSpan="2" Opacity="1"
              Width="30">
            <Grid.Effect>
                <DropShadowEffect ShadowDepth="1" RenderingBias="Performance" BlurRadius="3" />
            </Grid.Effect>
            <Border Background="{Binding IsWinning, Converter={StaticResource WinningToColor}}" CornerRadius="2" />
            <TextBlock FontSize="12" HorizontalAlignment="Center" VerticalAlignment="Center"
                       Margin="0,0,0,1" FontWeight="SemiBold"
                       Text="{Binding RollResult, Converter={StaticResource RollToString}}" />
            <Grid.RenderTransform>
                <ScaleTransform ScaleX="0" />
            </Grid.RenderTransform>
            <Grid.Style>
                <Style>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsRolling}" Value="False">
                            <DataTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation From="1" To="0"
                                                         Duration="0:0:0.100"
                                                         Storyboard.TargetProperty="RenderTransform.ScaleX">
                                            <DoubleAnimation.EasingFunction>
                                                <QuadraticEase />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.EnterActions>
                            <DataTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation From="0" To="1"
                                                         Duration="0:0:0.100"
                                                         Storyboard.TargetProperty="RenderTransform.ScaleX">
                                            <DoubleAnimation.EasingFunction>
                                                <QuadraticEase />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.ExitActions>

                        </DataTrigger>

                    </Style.Triggers>
                </Style>
            </Grid.Style>
        </Grid>
    </Grid>
</grp:GroupMemberBase>